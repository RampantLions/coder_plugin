# `coder_plugin/pyproject.toml`

# ======================================================================================================================
# 🏗️ Build Configurations
# ======================================================================================================================

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🛠️ Build System Configuration
#      ╰─▶ Standard PDM backend for packaging
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

# ======================================================================================================================
# 🗂️️ Project Configurations
# ======================================================================================================================

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   📦 Project Metadata
#      ╰─▶ Metadata about this plugin project itself
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[project]
name = "coder_plugin"
version = "0.0.1"
description = "Coder Plugin"
readme = { file = ".github/README.md", content-type = "text/markdown" }
license = { file = ".github/LICENSE" }
authors = [{ name = "Joshua Wiechman", email = "liminal.cognition@gmail.com" }]
maintainers = [{ name = "Joshua Wiechman", email = "liminal.cognition@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "importlib-metadata",
    "loguru>=0.7.3",
    "pluggy==1.0"
]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   📦 Optional Dependencies
#      ╰─▶ Additional groups of dependencies (e.g., dev, docs, testing)
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[project.optional-dependencies]
dev = [
    "black",
    "build",
    "coverage[toml]",
    "isort",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff",
    "safety",
    "twine"
]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   ⛓️ Project URLs
#      ╰─▶ Useful project and repository links
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[project.urls]

# 🔗 Project homepage (e.g., GitHub Pages, custom landing page).
Homepage = "https://RampantLions.github.io/coder_plugin/"

# 🔗 Canonical link to the repository (can duplicate Source for clarity).
Repository = "https://github.com/RampantLions/coder_plugin"

# 🔗 Link to the full source code repository.
Source = "https://github.com/RampantLions/coder_plugin"

# 🔗 Link to version history, release logs, or changelogs (e.g., Hatch auto-generated).
History = "https://hatch.pypa.io/dev/history/coder_plugin/"

# 🔗 Custom changelog file instead of Hatch history integration.
Changelog = "https://github.com/RampantLions/coder_plugin/blob/master/CHANGELOG.md"

# 🔗 Primary documentation page (e.g., README or external docs).
Documentation = "https://github.com/RampantLions/coder_plugin#readme"

# 🔗 Issue tracker for bug reports and feature requests.
Issues = "https://github.com/RampantLions/coder_plugin/issues"

# 🔗 Synonym for Issues — retained for compatibility with tools expecting 'Tracker'.
Tracker = "https://github.com/RampantLions/coder_plugin/issues"

# 🔗 Sponsorship link for supporting development via GitHub Sponsors.
Sponsor = "https://github.com/sponsors/RampantLions"

# 🔗 Alternate donation link (same as Sponsor, allows duplication for tools that read 'Donate').
Donate = "https://github.com/sponsors/RampantLions"

# ======================================================================================================================
# ⚙️ Tool Configurations
# ======================================================================================================================

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   📈 Coverage Run Settings
#      ╰─▶ Controls how coverage measurement is collected
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.coverage.run]
branch = true
source = ["src"]
parallel = true

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   📈 Coverage Report Settings
#      ╰─▶ Controls how coverage results are reported
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🎨 Black Formatter Configuration
#      ╰─▶ Defines formatting rules for automatic code formatting
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.black]
line-length = 120
target-version = ['py311']

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🗂️ Isort Import Sorter Configuration
#      ╰─▶ Defines sorting rules for Python imports
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["coder_plugin"]
known_third_party = ["loguru", "pluggy"]
src_paths = ["src", "tests"]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🔎 Mypy Static Typing Configuration
#      ╰─▶ Enforces type checking rules for static analysis
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.mypy]
python_version = "3.11"
strict = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_optional = true
exclude = ["tests/"]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   ⚙️ PDM Project Settings
#      ╰─▶ PDM-specific project configurations (e.g., versioning)
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pdm]
package-dir = "src"
version = { source = "scm" }

[tool.pdm.build]
includes = ["src/coder_plugin"]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   ⚙️ PDM Installation Settings
#      ╰─▶ Controls installation behavior for PDM (e.g., use UV installer)
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pdm.installation]
installer = "uv"

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🚀 PDM Script Shortcuts
#      ╰─▶ Defines shortcut commands for development and CI tasks
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pdm.scripts]
test =  "pytest tests"
test-cov = "pytest --cov=src --cov-report=term-missing tests"
lint = { composite = [
    "ruff check src tests",
    "black --check src tests",
    "isort --check-only src tests",
    "mypy src tests"
] }
format = { composite = [
    "isort src tests",
    "black src tests",
    "ruff check src tests --fix"
] }
run = "python src/coder_plugin_example/main.py"
safety = "safety check"
build = "pdm build"
publish = "pdm publish"
pre-commit-install = "pre-commit install"

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🛡️ Pre-Commit Hooks Configuration
#      ╰─▶ Defines Git pre-commit hooks for automated code quality checks
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pre-commit]
repos = [
  { repo = "https://github.com/psf/black", rev = "stable", hooks = [{id = "black"}] },
  { repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.7.1", hooks = [{id = "mypy"}] },
  { repo = "https://github.com/pre-commit/mirrors-isort", rev = "v5.12.0", hooks = [{id = "isort"}] },
  { repo = "https://github.com/charliermarsh/ruff-pre-commit", rev = "v0.1.0", hooks = [{id = "ruff"}] },
]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🧹 Pylint Linter Configuration
#      ╰─▶ Defines code style and linting rules enforced by Pylint
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
init-hook = "import sys; sys.path.append('src')"

[tool.pylint.messages_control]
disable = ["duplicate-code", "import-error", "relative-beyond-top-level"]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🧪 Pytest Configuration
#      ╰─▶ Controls pytest behavior and settings
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-markers"
testpaths = ["tests"]

# ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
#   🧹 Ruff Linter Configuration
#      ╰─▶ Defines code style and linting rules enforced by Ruff
# ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
[tool.ruff]
line-length = 120
target-version = "py311"
extend-select = ["I", "B", "C4", "SIM", "T20"]
ignore = ["E501"]
src = ["."]
